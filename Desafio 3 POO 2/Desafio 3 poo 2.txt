
Clase Cliente
	Privado Definir	nombre como Character
	Privado Definir cedula, usuario, contraseña como alfanumerico
	Publico Definir nNombre, nCedula, nUsuario, nContraseña como alfanumerico
	Publico Definir Cuenta_Bancaria, Tarjeta_credito como objetos

	Publico Metodo setNombre(nNombre) como alfanumerico
		nombre=nNombre
	Fin Metodo
	Publico Metodo getNombre() como alfanumerico
		return=nombre
	Fin Metodo

	Publico Metodo setCedula(nCedula) como alfanumerico
		cedula=nCedula
	Fin Metodo
	Publico Metodo getCedula() como alfanumerico
		return=cedula
	Fin Metodo

	Publico Metodo setUsuario(nUsuario) como alfanumerico
		usuario=nUsuario
	Fin Metodo
	Publico Metodo getUsuario() como alfanumerico
		return=usuario
	Fin Metodo
	Publico Metodo setContraseña(nContraseña) como alfanumerico
		contraseña=nContraseña
	Fin Metodo
	Publico Metodo getContraseña() como alfanumerico
		return=contraseña
	Fin Metodo

	Publico Metodo Cliente()
		nombre="Eduardo"
		cedula="19591303"
		usuario="Edubanco"
		contraseña="12345"
	Fin Metodo

	Publico Metodo Cliente (nNombre, nCedula, nUsuario, nContraseña)
		nombre=nNombre
		cedula=nCedula
		usuario=nUsuario
		contraseña=nContraseña
	Fin Metodo

	Publico Metodo Obtener_datos_cliente()
		Mostrar "Ingrese el nombre del cliente"
		Leer nNombre
		setNombre(nNombre)
		Mostrar "Ingrese la cedula del cliente"
		Leer nCedula
		setNombre(nCedula)
		Mostrar "Ingrese el usuario del cliente"
		Leer nUsuario
		setNombre(nUsuario)
		Mostrar "Ingrese la contraseña del cliente"
		Leer nContraseña
		setNombre(nContraseña)
	Fin Metodo

	Publico Metodo Indicar_info_cliente()
		Mostrar "El nombre del cliente es: " getNombre()
		Mostrar "La cedula del cliente es: " getCedula()
	Fin Metodo

Fin Clase

Clase Cuenta_Bancaria
	Privado Definir banco, tipo_cuenta como Character
	Privado Definir numero_cuenta como alfanumerico
	Privado Definir saldo_cuenta como real
	Publico Definir nBanco, nTipocuenta como Character
	Publico Definir nNumerocuenta como alfanumerico
	Publico Definir nSaldocuenta como real

	Publico Metodo setBanco(nBanco) como Character
		banco=nBanco
	Fin Metodo
	Publico Metodo getBanco() como Character
		return=banco
	Fin Metodo	
	Publico Metodo setTipocuenta(nTipocuenta) como Character
		tipo_cuenta=nTipocuenta
	Fin Metodo
	Publico Metodo getTipocuenta() como Character
		return=tipo_cuenta
	Fin Metodo
	Publico Metodo setNumerocuenta(nNumerocuenta) como alfanumerico
		numero_cuenta=nNumerocuenta
	Fin Metodo
	Publico Metodo getNumerocuenta() como alfanumerico
		return=numero_cuenta
	Fin Metodo
	Publico Metodo setSaldocuenta(nSaldocuenta) como real
		saldo_cuenta=nSaldocuenta
	Fin Metodo
	Publico Metodo getSaldocuenta() como real
		return=saldo_cuenta
	Fin Metodo

	Publico Metodo Cuenta_Bancaria()
		banco="Mercantil"
		tipo_cuenta="corriente"
		numero_cuenta="0105-1234-5678-1234-5678"
		saldo_cuenta="25000"
	Fin Metodo

	Publico Metodo Cuenta_Bancaria(nBanco, nTipocuenta, nNumerocuenta, nSaldocuenta)
		banco=nBanco
		tipo_cuenta=nTipocuenta
		numero_cuenta=nNumerocuenta
		saldo_cuenta=nSaldocuenta
	Fin Metodo

	Publico Metodo Solicitar_datos_cuenta()
		Mostrar "Ingrese el banco de la cuenta: "
		Leer nBanco
		setBanco(nBanco)
		Mostrar "Ingrese el tipo de la cuenta: "
		Leer nTipocuenta
		setBanco(nTipocuenta)
		Mostrar "Ingrese el numero de la cuenta: "
		Leer nNumerocuenta
		setBanco(nNumerocuenta)
		Mostrar "Ingrese el saldo de la cuenta: "
		Leer nSaldocuenta
		setBanco(nSaldocuenta)
	Fin Metodo

	Publico Metodo Mostrar_datos_cuenta()
		Mostrar "El banco de la cuenta es: " getBanco()
		Mostrar "El tipo de cuenta es: " getTipocuenta()
		Mostrar "El numero de la cuenta es: " getNumerocuenta()
		Mostrar "EL saldo de la cuenta es: " getSaldocuenta()
	Fin Metodo

Fin Clase

Clase Tarjeta_credito
	Privado Definir numero_tarjeta como alfanumerico
	Privado Definir tipo_tarjeta como Character
	Privado Definir saldo_tarjeta, deuda_tarjeta como real
	Publico Definir nNumero_tarjeta como alfanumerico
	Publico Definir nTipo_tarjeta como Character
	PublicoDefinir nSaldo_tarjeta, nDeuda_tarjeta como real

	Publico Metodo setNumerotarjeta(nNumero_tarjeta) como alfanumerico
		numero_tarjeta=nNumero_tarjeta
	Fin Metodo
	Publico Metodo getNumerotarjeta() como alfanumerico
		return=numero_tarjeta
	Fin Metodo
	Publico Metodo setTipotarjeta(nTipo_tarjeta) como Character
		tipo_tarjeta=nTipo_tarjeta
	Fin Metodo
	Publico Metodo getTipotarjeta() como Character
		return=tipo_tarjeta
	Fin Metodo
	Publico Metodo setSaldotarjeta(nSaldo_tarjeta) como real
		saldo_tarjeta=nSaldo_tarjeta
	Fin Metodo
	Publico Metodo getSaldotarjeta() como real
		return=saldo_tarjeta
	Fin Metodo
	Publico Metodo setDeudatarjeta(nDeuda_tarjeta) como real
		deuda_tarjeta=nDeuda_tarjeta
	Fin Metodo
	Publico Metodo getDeudatarjeta() como real
		return=deuda_tarjeta
	Fin Metodo

	Publico Metodo Tarjeta_credito()
		numero_tarjeta="1234-5678-9012-3456"
		tipo_tarjeta="Black"
		saldo_tarjeta=200000
		deuda_tarjeta=0
	Fin Metodo

	Publico Metodo Tarjeta_credito(nNumero_tarjeta, nTipo_tarjeta, nSaldo_tarjeta, nDeuda_tarjeta)
		numero_tarjeta=nNumero_tarjeta
		tipo_tarjeta=nTipo_tarjeta
		saldo_tarjeta=nSaldo_tarjeta
		deuda_tarjeta=nDeuda_tarjeta
	Fin Metodo

	Publico Metodo Obtener_datos_tarjeta()
		Mostrar "Ingrese el numero de la tarjeta de credito: "
		Leer nNumero_tarjeta
		setNumerotarjeta(nNumero_tarjeta)
		Mostrar "Ingrese el tipo de la tarjeta de credito: "
		Leer nTipo_tarjeta
		setNumerotarjeta(nTipo_tarjeta)
		Mostrar "Ingrese el saldo de la tarjeta de credito: "
		Leer nSaldo_tarjeta
		setNumerotarjeta(nSaldo_tarjeta)
		Mostrar "Ingrese la deuda de la tarjeta de credito: "
		Leer nDeuda_tarjeta
		setNumerotarjeta(nDeuda_tarjeta)
	Fin Metodo

	Publico Metodo Mostrar_datos_tarjeta()
		Mostrar "El numero de la tarjeta es: " getNumerotarjeta()
		Mostrar "El tipo de la tarjeta es: " getTipotarjeta()
		Mostrar "El saldo de la tarjeta es: " getSaldotarjeta()
		Mostrar "La deuda de la tarjeta es: " getDeudatarjeta()
	Fin Metodo

Fin Clase

Proceso
	Definir c1, c2 como Cliente 
	Definir cuenta1, cuenta2 como Cuenta_Bancaria
	Definir tarjeta1, tarjeta2 como Tarjeta_credito

	c1 = nuevo Cliente() //Este es un cliente que se definira por defecto
	c1.Cuenta_Bancaria() //Los datos de la cuenta bancaria de c1 se cargan por defecto
	c1.Tarjeta_credito() //Los datos de la tarjeta de c1 se cargan por defecto

	cuenta_c1 = nuevo Cuenta_Bancaria()
	tarjeta_c1 = nuevo Tarjeta_credito()

	

	c2.Obtener_datos_cliente()
	c2 = nuevo Cliente(nNombre, nCedula, nUsuario, nContraseña)
	c2.Solicitar_datos_cuenta()
	cuenta2 = nuevo Cuenta_Bancaria(nBanco, nTipocuenta, nNumerocuenta, nSaldocuenta)
	c2.Obtener_datos_tarjeta()
	tarjeta2 = nuevo Tarjeta_credito(nNumero_tarjeta, nTipo_tarjeta, nSaldo_tarjeta, nDeuda_tarjeta)

	Subproceso Mostrar_datos()
		i=0
		Publico Definir user, pass como alfanumerico
		Do{
			Mostrar "Ingrese el usuario: "
			Leer user
			Mostrar "Ingrese la contraseña: "
			Leer pass
				Si(user=c1.getUsuario() Y pass=c1.getContraseña()) entonces
					c1.Indicar_info_cliente()
					c1.Mostrar_datos_cuenta()
					c1.Mostrar_datos_tarjeta()
					i=i+1
					Sino 
						Si(user=c2.getUsuario() Y pass=c2.getContraseña()) entonces
							c2.Indicar_info_cliente()
							c2.Mostrar_datos_cuenta()
							c2.Mostrar_datos_tarjeta()
							i=i+1
							Sino 
								Mostrar "Alguno de los datos ingresados es erroneo, por favor verificar"
		}while i<1
	Fin Subproceso

Fin Proceso


